#!/bin/bash

CURRENT_DIR=$(cd "$(dirname "$0")"; pwd)

validate_port() {
    local port=$1
    if ! [[ "$port" =~ ^[0-9]+$ ]] || [ "$port" -lt 1 ] || [ "$port" -gt 65535 ]; then
        echo "Error: Port must be a number between 1 and 65535"
        exit 1
    fi
}

# 从控制台获取输入，赋值给 dns_port 变量，默认为 1153
read -p "请输入dns端口, 默认为1153:" dns_port
dns_port=${dns_port:-1153}
validate_port "$dns_port"

# 从控制台获取输入，赋值给 redir_port 变量默认为 1234
read -p "请输入redir端口, 默认为1234:" redir_port
redir_port=${redir_port:-1234}
validate_port "$redir_port"

fake_ip_range="28.0.0.1/8"


cat > $CURRENT_DIR/clash.fake-ip.iptables.sh << EOF


# Check if running as root
if [ "\$(id -u)" != "0" ]; then
    echo "Error: This script must be run as root"
    exit 1
fi

# Function to create ipset if it doesn't exist
create_ipset_if_not_exists() {
    local set_name=\$1
    if ! ipset list -n | grep -q "^\$set_name\$"; then
        echo "Creating ipset: \$set_name"
        ipset create \$set_name hash:net hashsize 64 maxelem 65536
    else
        echo "IPSet \$set_name already exists"
    fi
}

# Check if ipset is installed
if ! command -v ipset >/dev/null 2>&1; then
    echo "Error: ipset is not installed. Please install it first."
    exit 1
fi

# Create required ipsets
create_ipset_if_not_exists ipset_gfw
create_ipset_if_not_exists ipset_telegram

#  OUTPUT 规则
# ======================================================================================================================
iptables -t nat -N clash_dns_out
iptables -t nat -A clash_dns_out -p udp -j REDIRECT --to $dns_port
iptables -t nat -A clash_dns_out -p tcp -j REDIRECT --to $dns_port

iptables -t nat -I OUTPUT 1 -p udp --dport 53 -j clash_dns_out
iptables -t nat -I OUTPUT 1 -p tcp --dport 53 -j clash_dns_out

# ---------------------------------------------------------------------------------------------------------------------

iptables -t nat -N clash_out
iptables -t nat -A clash_out -p tcp -m set --match-set ipset_gfw dst        -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash_out -p udp -m set --match-set ipset_gfw dst        -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash_out -p tcp -m set --match-set ipset_telegram dst   -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash_out -p udp -m set --match-set ipset_telegram dst   -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash_out -p tcp -d $fake_ip_range                      -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash_out -p udp -d $fake_ip_range                      -j REDIRECT --to-ports $redir_port

iptables -t nat -I OUTPUT 1 -p tcp -j clash_out
iptables -t nat -I OUTPUT 1 -p udp -j clash_out

#  PREROUTING 规则
# ======================================================================================================================
iptables -t nat -N clash_dns
iptables -t nat -A clash_dns -p tcp -j REDIRECT --to $dns_port
iptables -t nat -A clash_dns -p udp -j REDIRECT --to $dns_port

iptables -t nat -I PREROUTING 1 -p tcp --dport 53 -j clash_dns
iptables -t nat -I PREROUTING 1 -p udp --dport 53 -j clash_dns

# ---------------------------------------------------------------------------------------------------------------------
iptables -t nat -N clash
iptables -t nat -A clash -p tcp -m set --match-set ipset_gfw dst        -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash -p udp -m set --match-set ipset_gfw dst        -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash -p tcp -m set --match-set ipset_telegram dst   -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash -p udp -m set --match-set ipset_telegram dst   -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash -p tcp -d $fake_ip_range                      -j REDIRECT --to-ports $redir_port
iptables -t nat -A clash -p udp -d $fake_ip_range                      -j REDIRECT --to-ports $redir_port

iptables -t nat -I PREROUTING 1 -p tcp -j clash
iptables -t nat -I PREROUTING 1 -p udp -j clash   
EOF

chmod a+x $CURRENT_DIR/clash.fake-ip.iptables.sh

# 生成 reset iptables 规则
cat > $CURRENT_DIR/clash.fake-ip.iptables.reset.sh << EOF
#!/bin/sh
# Generated by clash.sh
iptables -t nat -F clash
iptables -t nat -F clash_dns
iptables -t nat -F clash_out
iptables -t nat -F clash_dns_out
iptables -t nat -D PREROUTING -p tcp --dport 53 -j clash_dns
iptables -t nat -D PREROUTING -p udp --dport 53 -j clash_dns
iptables -t nat -D PREROUTING -p tcp            -j clash
iptables -t nat -D OUTPUT -p udp --dport 53 -j clash_dns_out
iptables -t nat -D OUTPUT -p tcp            -j clash_out
# delete chain
iptables -t nat -X clash
iptables -t nat -X clash_dns
iptables -t nat -X clash_out
iptables -t nat -X clash_dns_out
EOF

chmod a+x $CURRENT_DIR/clash.fake-ip.iptables.reset.sh  
